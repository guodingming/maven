<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>IOV-Base</artifactId>
        <groupId>com.iov</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>IOV-License</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <name>IOV-License</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>org.apache.commons.codec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk16</artifactId>
            <version>1.45</version>
        </dependency>

        <dependency>
            <groupId>org.hyperic</groupId>
            <artifactId>sigar</artifactId>
            <version>1.6.4</version>
        </dependency>


    </dependencies>

    <!--<build>-->
        <!--<plugins>-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<source>${java.version}</source>-->
                    <!--<target>${java.version}</target>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-shade-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>shade</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<transformers>-->
                                <!--<transformer-->
                                        <!--implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
                                    <!--<mainClass>com.yunshouhu.apkprotect.MainHelper</mainClass>-->
                                <!--</transformer>-->
                            <!--</transformers>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>com.github.wvengen</groupId>-->
                <!--<artifactId>proguard-maven-plugin</artifactId>-->
                <!--<version>2.0.11</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>proguard</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->

                    <!--<attach>true</attach>-->
                    <!--<attachArtifactClassifier>proguard</attachArtifactClassifier>-->
                    <!--&lt;!&ndash; attach 的作用是在 install 与 deploy 时将生成的 pg 文件也安装与部署 &ndash;&gt;-->
                    <!--<options> &lt;!&ndash; 详细配置方式参考 ProGuard 官方文档 &ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-dontobfuscate</option>&ndash;&gt;-->
                        <!--<option>-ignorewarnings</option> &lt;!&ndash;忽略所有告警&ndash;&gt;-->
                        <!--<option>-dontshrink</option>   &lt;!&ndash;不做 shrink &ndash;&gt;-->
                        <!--<option>-dontoptimize</option> &lt;!&ndash;不做 optimize &ndash;&gt;-->
                        <!--<option>-dontskipnonpubliclibraryclasses</option>-->
                        <!--<option>-dontskipnonpubliclibraryclassmembers</option>-->

                        <!--&lt;!&ndash;不要重构包名-->
                        <!--<option>-repackageclasses org.noahx.proguard.example.project2.pg</option>-->
                        <!--&ndash;&gt;-->
                        <!--&lt;!&ndash;平行包结构（重构包层次），所有混淆的类放在 pg 包下&ndash;&gt;-->

                        <!--&lt;!&ndash;保护程序入口&ndash;&gt;-->
                        <!--<option>-keep public class com.yunshouhu.apkprotect.MainHelper { public static void-->
                            <!--main(java.lang.String[]);}-->
                        <!--</option>-->


                        <!--&lt;!&ndash; 以下为 Keep，哪些内容保持不变，因为有一些内容混淆后（a,b,c）导致反射或按类名字符串相关的操作失效 &ndash;&gt;-->

                        <!--<option>-keep class **.package-info</option>-->
                        <!--&lt;!&ndash;保持包注解类&ndash;&gt;-->

                        <!--<option>-keepattributes Signature</option>-->
                        <!--&lt;!&ndash;JAXB NEED，具体原因不明，不加会导致 JAXB 出异常，如果不使用 JAXB 根据需要修改&ndash;&gt;-->
                        <!--&lt;!&ndash; Jaxb requires generics to be available to perform xml parsing and without this option ProGuard was not retaining that information after obfuscation. That was causing the exception above. &ndash;&gt;-->

                        <!--<option>-keepattributes SourceFile,LineNumberTable,*Annotation*</option>-->
                        <!--&lt;!&ndash;保持源码名与行号（异常时有明确的栈信息），注解（默认会过滤掉所有注解，会影响框架的注解）&ndash;&gt;-->

                        <!--<option>-keepclassmembers enum org.noahx.proguard.example.project2.** { *;}</option>-->
                        <!--&lt;!&ndash;保持枚举中的名子，确保枚举 valueOf 可以使用&ndash;&gt;-->

                        <!--<option>-keep class org.noahx.proguard.example.project2.bean.** { *;}</option>-->
                        <!--&lt;!&ndash;保持 Bean 类，（由于很多框架会对 Bean 中的内容做反射处理，请根据自己的业务调整） &ndash;&gt;-->

                        <!--<option>-keep class org.noahx.proguard.example.project2.Project2 { public void init(); public-->
                            <!--void-->
                            <!--destroy(); }-->
                        <!--</option>-->
                        <!--&lt;!&ndash; 保持对外的接口性质类对外的类名与方法名不变 &ndash;&gt;-->

                    <!--</options>-->
                    <!--&lt;!&ndash;<outjar>${project.build.finalName}-</outjar>&ndash;&gt;-->
                    <!--<outjar>IOV-License-1.0-</outjar>-->
                    <!--<libs>-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                    <!--</libs>-->

                <!--</configuration>-->
            <!--</plugin>-->

        <!--</plugins>-->
    <!--</build>-->
</project>